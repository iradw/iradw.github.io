(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{488:function(e,r,t){e.exports=t.p+"assets/img/docker-test.22fcf7df.png"},489:function(e,r,t){e.exports=t.p+"assets/img/docker-images.cb28ab25.png"},519:function(e,r,t){"use strict";t.r(r);var o=t(4),s=Object(o.a)({},(function(){var e=this,r=e.$createElement,o=e._self._c||r;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"docker笔记"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#docker笔记"}},[e._v("#")]),e._v(" Docker笔记")]),e._v(" "),o("h2",{attrs:{id:"docker安装"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#docker安装"}},[e._v("#")]),e._v(" Docker安装")]),e._v(" "),o("h3",{attrs:{id:"_1-安装docker"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_1-安装docker"}},[e._v("#")]),e._v(" 1. 安装Docker")]),e._v(" "),o("p",[e._v("本人环境为"),o("code",[e._v("ArchLinux")]),e._v("，因此安装非常简单，"),o("code",[e._v("sudo pacman -Sy docker")]),e._v("即可，其他环境可查询其他文档，也比较简单，只不过需要重新设置镜像源。")]),e._v(" "),o("h3",{attrs:{id:"_2-启动docker"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_2-启动docker"}},[e._v("#")]),e._v(" 2. 启动Docker")]),e._v(" "),o("p",[o("code",[e._v("systemctl start docker")]),e._v("启动，"),o("code",[e._v("systemctl enable docker")]),e._v("设置开机自启动。")]),e._v(" "),o("h3",{attrs:{id:"_3-更换镜像源"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_3-更换镜像源"}},[e._v("#")]),e._v(" 3. 更换镜像源")]),e._v(" "),o("p",[e._v("docker默认使用官方镜像源，速度慢，需要更换源")]),e._v(" "),o("ol",[o("li",[e._v("在"),o("code",[e._v("/etc/docker")]),e._v("下，创建"),o("code",[e._v("daemon.json")]),e._v("文件，写入下面的代码，更换为中科大的镜像源。")])]),e._v(" "),o("div",{staticClass:"language-json line-numbers-mode"},[o("pre",{pre:!0,attrs:{class:"language-json"}},[o("code",[o("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),o("span",{pre:!0,attrs:{class:"token property"}},[e._v('"registry-mirrors"')]),o("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),o("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),o("span",{pre:!0,attrs:{class:"token string"}},[e._v('"https://docker.mirrors.ustc.edu.cn"')]),o("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n"),o("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),o("div",{staticClass:"line-numbers-wrapper"},[o("span",{staticClass:"line-number"},[e._v("1")]),o("br"),o("span",{staticClass:"line-number"},[e._v("2")]),o("br"),o("span",{staticClass:"line-number"},[e._v("3")]),o("br")])]),o("ol",{attrs:{start:"2"}},[o("li",[e._v("重启docker服务，"),o("code",[e._v("systemctl restart docker")])]),e._v(" "),o("li",[e._v("检测是否成功，执行"),o("code",[e._v("docker run hello-world")]),e._v("，如果出现"),o("img",{attrs:{src:t(488),alt:""}}),e._v("证明docker安装和配置成功。")])]),e._v(" "),o("h2",{attrs:{id:"docker中央仓库"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#docker中央仓库"}},[e._v("#")]),e._v(" Docker中央仓库")]),e._v(" "),o("ol",[o("li",[e._v("官方仓库，"),o("a",{attrs:{href:"https://hub.docker.com",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://hub.docker.com"),o("OutboundLink")],1),e._v("，下载速度非常慢")]),e._v(" "),o("li",[e._v("推荐，"),o("a",{attrs:{href:"https://hub.daocloud.io",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://hub.daocloud.io"),o("OutboundLink")],1)])]),e._v(" "),o("h2",{attrs:{id:"docker镜像操作"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#docker镜像操作"}},[e._v("#")]),e._v(" Docker镜像操作")]),e._v(" "),o("ol",[o("li",[e._v("拉取镜像\n在daocloud网站上搜索需要的镜像，比如nginx，在"),o("code",[e._v("版本")]),e._v("一栏，点击拉取可以得到镜像名，即"),o("code",[e._v("daocloud.io/library/nginx:latest")]),e._v("，执行"),o("code",[e._v("docker pull daocloud.io/library/nginx:latest")]),e._v("即可拉取nginx镜像。")]),e._v(" "),o("li",[e._v("查看本地镜像\n"),o("code",[e._v("docker images")]),e._v("，"),o("code",[e._v("IMAGE_ID")]),e._v("就是镜像的唯一标识\n"),o("img",{attrs:{src:t(489),alt:""}})]),e._v(" "),o("li",[e._v("删除本地镜像\n"),o("code",[e._v("docker rmi 08393e824c32")]),e._v("，"),o("code",[e._v("08393e824c32")]),e._v("是刚刚下载的NGINX镜像的"),o("code",[e._v("IMAGE_ID")]),e._v("。")])]),e._v(" "),o("h2",{attrs:{id:"docker容器操作"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#docker容器操作"}},[e._v("#")]),e._v(" Docker容器操作")]),e._v(" "),o("ol",[o("li",[o("p",[e._v("运行容器\n"),o("code",[e._v("docker run 镜像的标识|镜像的名称[:镜像的TAG]")]),e._v("，这种方法比较简单，但是不能指定端口，需要用到下面的方式启动。")])]),e._v(" "),o("li",[o("p",[e._v("常用参数\n"),o("code",[e._v("docker run -d -p 宿主机端口:容器端口 --name 容器名称 镜像的标识|镜像的名称[:镜像的TAG]")])]),e._v(" "),o("div",{staticClass:"custom-block tip"},[o("p",[e._v("-d代表后台运行，-p宿主机端口为我们需要在浏览器访问的端口，容器端口就是镜像在虚拟环境中运行的端口,")])]),e._v(" "),o("p",[e._v("如"),o("code",[e._v("docker run -d -p 8083:80 --name nginxContainer 083")]),e._v("，执行后在本地浏览器访问"),o("code",[e._v("localhost:8083")]),e._v("就可以看到NGINX的界面。填写镜像标识时不需要完整填写，只需填写前几个字符，并保证唯一即可。")])]),e._v(" "),o("li",[o("p",[e._v("查看容器\n"),o("code",[e._v("docker ps -qa")]),e._v("\n-q查看容器id，-a查看全部容器，-qa查看全部容器id")])]),e._v(" "),o("li",[o("p",[e._v("查看容器日志\n"),o("code",[e._v("docker logs -f 容器id|容器名")])])]),e._v(" "),o("li",[o("p",[e._v("进入容器内部\n"),o("code",[e._v("docker exec -it 容器id|容器名 bash")]),e._v("\n输入"),o("code",[e._v("exit")]),e._v("退出容器")])]),e._v(" "),o("li",[o("p",[e._v("停止容器\n"),o("code",[e._v("docker stop 容器id|容器名")]),e._v(" "),o("code",[e._v("docker stop $(docker ps -qa)")]),e._v("停止全部容器")])]),e._v(" "),o("li",[o("p",[e._v("启动容器\n"),o("code",[e._v("docker start 容器id|容器名")])])]),e._v(" "),o("li",[o("p",[e._v("删除容器\n"),o("code",[e._v("docker rm 容器id|容器名")]),e._v(" "),o("code",[e._v("docker rm $(docker ps -qa)")]),e._v("删除全部容器")]),e._v(" "),o("div",{staticClass:"custom-block warning"},[o("p",[e._v("删除容器前需要停止容器。")])])]),e._v(" "),o("li",[o("p",[e._v("把宿主机的文件复制到docker容器内部\n"),o("code",[e._v("docker cp 文件名 容器id 容器内部路径")])])])])])}),[],!1,null,null,null);r.default=s.exports}}]);